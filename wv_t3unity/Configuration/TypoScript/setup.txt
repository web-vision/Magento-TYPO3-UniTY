// header data
tx_wvt3unity_head < page
tx_wvt3unity_head = PAGE
tx_wvt3unity_head {
    typeNum = 3210

    config.disableAllHeaderCode = 0
    config.removeDefaultJS = external
    config.removeDefaultCss = external
    config.absRefPrefix = #TYPO3_URL#/
    config.pageRendererTemplateFile = EXT:wv_t3unity/Resources/Private/Templates/PageRenderer/PageRenderer.html

    meta {
        abstract.field = abstract

        keywords.field = keywords
        description.field = description

        author.field = author
        author_email.field = author_email
        last_updated.field = lastUpdated
    }

    10 = TEMPLATE
    10.template = TEXT
    10.template.value (
    "title": "###TITLE###",
    "canonical": "###CANONICAL###",
    )
    10.marks {
        // Get Content to make sure the CSS/JS/Meta-Tags included in the content are in the header // NO OUTPUT
        content < styles.content.get
        content.select.where = colPos=1
        sidebar_left < styles.content.get
        sidebar_left.select.where = colPos=2
        sidebar_right < styles.content.get
        sidebar_right.select.where = colPos=3

        // Relevant data
        TITLE = TEXT
        TITLE.data = page:title
        CANONICAL = TEXT
        CANONICAL.data = page:canonical_url
    }
}

// mode page
tx_wvt3unity_page = PAGE
tx_wvt3unity_page {
    typeNum = 3211
    config.disableAllHeaderCode = 1
    config.metaCharset = UTF-8

    10 = FLUIDTEMPLATE
    10 {
        // Define BE Layouts
		file.stdWrap.cObject = CASE
		file.stdWrap.cObject {
			key.data = levelfield:-1, backend_layout_next_level, slide
			key.override.field = backend_layout

            default = TEXT
			default.value = {$plugin.tx_wvt3unity.templatePath}1column.html

            wv_t3unity__1column = TEXT
            wv_t3unity__1column.value = {$plugin.tx_wvt3unity.templatePath}1column.html

            wv_t3unity__2columns-left = TEXT
            wv_t3unity__2columns-left.value = {$plugin.tx_wvt3unity.templatePath}2columns-left.html

            wv_t3unity__2columns-right = TEXT
            wv_t3unity__2columns-right.value = {$plugin.tx_wvt3unity.templatePath}2columns-right.html

            wv_t3unity__3columns = TEXT
            wv_t3unity__3columns.value = {$plugin.tx_wvt3unity.templatePath}3columns.html
        }

        // Define paths for templates
        partialRootPath = EXT:wv_t3unity/Resources/Private/Partials/
        layoutRootPath = EXT:wv_t3unity/Resources/Private/Layouts/

        // Set variables in templates and render content
        // Variables in template
        variables {
            content < styles.content.get
            content.select.where = colPos=1

            sidebar_left < styles.content.get
            sidebar_left.select.where = colPos=2

            sidebar_right < styles.content.get
            sidebar_right.select.where = colPos=3
        }
    }
}

// mode column
tx_wvt3unity_column = PAGE
tx_wvt3unity_column {
    typeNum = 3212
    config.disableAllHeaderCode = 1
    config.metaCharset = UTF-8

    10 = TEMPLATE
    10.template = TEXT
    10.template.value = ###CONTENT###
    10.marks {
        CONTENT < styles.content.get
        CONTENT.select.where = colPos={GP:colPos}
        CONTENT.select.where.insertData = 1
    }
}

// mode element
tx_wvt3unity_element = PAGE
tx_wvt3unity_element {
    typeNum = 3213
    config.disableAllHeaderCode = 1
    config.metaCharset = UTF-8

    10 = TEMPLATE
    10.template = TEXT
    10.template.value = ###CONTENT###
    10.marks {
        CONTENT = RECORDS
        CONTENT.tables = tt_content
        CONTENT.source.data = GP:uid
        CONTENT.dontCheckPid = 1
    }
}

// mode menu
tx_wvt3unity_menu = PAGE
tx_wvt3unity_menu {
    typeNum = 3214
    config.disableAllHeaderCode = 1
    config.metaCharset = UTF-8
    10 = CASE
    10 {
        key.data = GP:layout

        default = CASE
        default {
            key.data = GP:special

            default = HMENU
            default {
                special = directory
                special.value.data = GP:special-value

                wrap = <nav class="t3-menu t3-directory">|</nav>

                1 = TMENU
                1 {
                    expAll = 1
                    wrap = <ul class="t3-menu-list">|</ul>
                    NO = 1
                    NO {
                        doNotLinkIt = 1
                        allWrap = <a href="#BASE_URL#{field: unity_path}">|</a>
                        allWrap.insertData = 1
                        wrapItemAndSub = <li class="first">|</li> |*| <li>|</li> |*| <li class="last">|</li>
                    }
                    ACT < .NO
                    ACT {
                        wrapItemAndSub = <li class="first active">|</li> |*| <li class="active">|</li> |*| <li class="last active">|</li>
                    }
                    IFSUB < .NO
                    IFSUB {
                        wrapItemAndSub = <li class="first hassub">|</li> |*| <li class="hassub">|</li> |*| <li class="last hassub">|</li>
                    }
                    ACTIFSUB < .NO
                    ACTIFSUB {
                        wrapItemAndSub = <li class="first active hassub">|</li> |*| <li class="active hassub">|</li> |*| <li class="last active hassub">|</li>
                    }
                }
                2 < .1
                2 {
                    wrap = <ul class="t3-menu-sublist">|</ul>
                }
                3 < .2
            }
            list < .default
            list {
                wrap = <nav class="t3-menu t3-list">|</nav>
                special = list
                1 {
                    expAll = 1
                    IFSUB < .NO
                    ACTIFSUB < .ACT
                }
            }
        }

        menuItem < .default
        menuItem {
            default {
                wrap >
                1 {
                    wrap >
                    NO.wrapItemAndSub = <li>|</li>
                    ACT.wrapItemAndSub = <li class="active">|</li>
                    IFSUB.wrapItemAndSub = <li class="hassub">|</li>
                    ACTIFSUB.wrapItemAndSub = <li class="active hassub">|</li>
                }
            }
            list {
                wrap >
                1 {
                    wrap >
                    NO.wrapItemAndSub = <li>|</li>
                    ACT.wrapItemAndSub = <li class="active">|</li>
                    IFSUB.wrapItemAndSub = <li class="hassub">|</li>
                    ACTIFSUB.wrapItemAndSub = <li class="active hassub">|</li>
                }
            }
        }
    }
}
