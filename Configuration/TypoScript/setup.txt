page {
    meta {
        X-UA-Compatible >
    }

    10 {
        templateName.stdWrap {
            ifEmpty = 1column
        }

        templateRootPaths {
            10 = EXT:wv_t3unity/Resources/Private/Templates/
        }

        partialRootPaths {
            10 = EXT:wv_t3unity/Resources/Private/Partials/
        }

        layoutRootPaths {
            10 = EXT:wv_t3unity/Resources/Private/Layouts/
        }

        // Set variables in templates and render content
        // Variables in template
        variables {
            content < styles.content.get
            content.select.where = colPos=0

            sidebarLeft < styles.content.get
            sidebarLeft.select.where = colPos=1

            sidebarRight < styles.content.get
            sidebarRight.select.where = colPos=2
        }
    }
}

tx_wvt3unity_abstract = PAGE
tx_wvt3unity_abstract.config {
    disableAllHeaderCode = 1
    metaCharset = UTF-8
    absRefPrefix = %BASE_URL%/
    tx_realurl_enable = 1
}

// header data
tx_wvt3unity_head < page
tx_wvt3unity_head = PAGE
tx_wvt3unity_head {
    typeNum = 3210

    config {
        absRefPrefix = %TYPO3_URL%/
        // set proper content type
        additionalHeaders = Content-Type: application/json; charset=utf-8
        // disable parsetime output
        debug = 0
        // make sure that header data is fetched
        disableAllHeaderCode = 0
        // disable body tag
        disableBodyTag = 1
        // change template for rendering the whole page
        pageRendererTemplateFile = EXT:wv_t3unity/Resources/Private/Templates/PageRenderer/PageRenderer.html
        // write inline CSS/JS in file
        removeDefaultCss = external
        removeDefaultJS = external
        // enable realurl
        tx_realurl_enable = 1
    }

    meta {
        abstract.field = abstract

        keywords.field = keywords
        description.field = description

        author.field = author
        author_email.field = author_email
        last_updated.field = lastUpdated
    }

    10 = TEMPLATE
    10.template = TEXT
    10.template.value (
        "title": "###TITLE###",
        "canonical": "###CANONICAL###",
    )
    10.marks {
        // get Content to make sure the CSS/JS/Meta-Tags included in the content are in the header // NO OUTPUT
        content < styles.content.get
        content.select.where = colPos=1
        sidebar_left < styles.content.get
        sidebar_left.select.where = colPos=2
        sidebar_right < styles.content.get
        sidebar_right.select.where = colPos=3

        // relevant data
        TITLE = TEXT
        TITLE.data = page:title
        CANONICAL = TEXT
        CANONICAL.data = page:canonical_url
    }
}

// mode page
tx_wvt3unity_page < page
tx_wvt3unity_page {
    typeNum = 3211

    config < tx_wvt3unity_abstract.config
}

// mode column
tx_wvt3unity_column < tx_wvt3unity_abstract
tx_wvt3unity_column {
    typeNum = 3212

    10 = TEMPLATE
    10.template = TEXT
    10.template.value = ###CONTENT###
    10.marks {
        CONTENT < styles.content.get
        CONTENT.select.where = colPos={GP:colPos}
        CONTENT.select.where.insertData = 1
    }
}

// mode element
tx_wvt3unity_element < tx_wvt3unity_abstract
tx_wvt3unity_element {
    typeNum = 3213

    10 = TEMPLATE
    10.template = TEXT
    10.template.value = ###CONTENT###
    10.marks {
        CONTENT = RECORDS
        CONTENT.tables = tt_content
        CONTENT.source.data = GP:uid
        CONTENT.dontCheckPid = 1
    }
}

// mode menu
tx_wvt3unity_menu < tx_wvt3unity_abstract
tx_wvt3unity_menu {
    typeNum = 3214

    10 = CASE
    10 {
        key.data = GP:layout

        default = CASE
        default {
            key.data = GP:special

            default = HMENU
            default {
                special = directory
                special.value.data = GP:special-value
                excludeUidList.value.data = GP:exclude-uid-list
                entryLevel.value.data = GP:entry-level

                wrap = <nav class="t3-menu t3-directory">|</nav>

                1 = TMENU
                1 {
                    expAll = 1
                    wrap = <ul class="t3-menu-list">|</ul>
                    NO = 1
                    NO {
                        wrapItemAndSub = <li class="first">|</li> |*| <li>|</li> |*| <li class="last">|</li>
                    }

                    ACT < .NO
                    ACT {
                        wrapItemAndSub = <li class="first active">|</li> |*| <li class="active">|</li> |*| <li class="last active">|</li>
                    }

                    IFSUB < .NO
                    IFSUB {
                        wrapItemAndSub = <li class="first hassub">|</li> |*| <li class="hassub">|</li> |*| <li class="last hassub">|</li>
                    }

                    ACTIFSUB < .NO
                    ACTIFSUB {
                        wrapItemAndSub = <li class="first active hassub">|</li> |*| <li class="active hassub">|</li> |*| <li class="last active hassub">|</li>
                    }
                }

                2 < .1
                2 {
                    wrap = <ul class="t3-menu-sublist">|</ul>
                }

                3 < .2
            }

            list < .default
            list {
                wrap = <nav class="t3-menu t3-list">|</nav>
                special = list
                1 {
                    expAll = 1
                    IFSUB < .NO
                    ACTIFSUB < .ACT
                }
            }
        }

        menuItem < .default
        menuItem {
            default {
                wrap >
                1 {
                    wrap >
                    NO.wrapItemAndSub = <li>|</li>
                    ACT.wrapItemAndSub = <li class="active">|</li>
                    IFSUB.wrapItemAndSub = <li class="hassub">|</li>
                    ACTIFSUB.wrapItemAndSub = <li class="active hassub">|</li>
                }
            }

            list {
                wrap >
                1 {
                    wrap >
                    NO.wrapItemAndSub = <li>|</li>
                    ACT.wrapItemAndSub = <li class="active">|</li>
                    IFSUB.wrapItemAndSub = <li class="hassub">|</li>
                    ACTIFSUB.wrapItemAndSub = <li class="active hassub">|</li>
                }
            }
        }
    }
}

# url fix for enlarge image
tt_content.image.20 {
    1 {
        stdWrap {
            replacement {
                10 {
                    search = %BASE_URL%
                    replace = %TYPO3_URL%
                }
            }
        }
    }
}
